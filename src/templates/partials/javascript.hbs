<script src="https://cdn.knightlab.com/libs/orangeline/latest/js/main.js"></script>
<script type="text/javascript">
	const spreadsheetInputEl = document.getElementById('step-3-form');
	spreadsheetInputEl.addEventListener('input', (e) => updateEmbed(e));

	const openInNewTabEl = document.getElementById('new-window-preview');
	openInNewTabEl.addEventListener('click', (e) => openEmbedInNewTab());

	const showPreviewEl = document.getElementById('show-preview');
	showPreviewEl.addEventListener('click', (e) => showPreview());

	function updateEmbed(e) {
		const spreadsheetInputEl = document.getElementById('spreadsheet-input');
		const source = spreadsheetInputEl.value ? parseGoogleSpreadsheetURL(spreadsheetInputEl.value).key : '1fWdaOBE62qfr3OWZGsPqbF4X-bh_VQJ5U3fbbZbd61U';

		const widthInputEl = document.getElementById('embed-width');
		const width = widthInputEl.value;

		const heightInputEl = document.getElementById('embed-height');
		const height = heightInputEl.value;

		const options = {
			source,
			width,
			height
		};
		const queryParamsString = buildQueryParamsString(options);

		let shareLinkEl = document.getElementById('share-link');
		const srcUrl = `http://scene.knightlab.com/?${queryParamsString}`;
		shareLinkEl.value = srcUrl;

		let iframe = `<iframe src="${srcUrl}" width="${options.width}" height="${options.height}" frameborder="0"></iframe>`;
		document.getElementById('embed').value = iframe;
	}

	function showPreview() {
		const srcUrl = generateSrcUrl();

		var preview = document.getElementById('preview-embed');

		if (preview.style.display === 'none') {
			preview.style.display = 'block';
			document.querySelector('#preview-embed-iframe iframe').setAttribute('src', srcUrl)
		} else {
			preview.style.display = 'none';
		}
	}

	function openEmbedInNewTab() {
		const srcUrl = generateSrcUrl();
		openInNewTabEl.setAttribute('href', srcUrl);
	}

	function buildQueryParamsString(params) {
		let queryParams = [];
		for (var key in params) {
			if (params.hasOwnProperty(key)) {
				queryParams.push(`${key}=${params[key]}`);
			}
		}
		return queryParams.join('&');
	}

	function parseGoogleSpreadsheetURL(url) {
		parts = {
			key: null,
			worksheet: 0 // not really sure how to use this to get the feed for that sheet, so this is not ready except for first sheet right now
		}
		// key as url parameter (old-fashioned)
		var key_pat = /\bkey=([-_A-Za-z0-9]+)&?/i;
		var url_pat = /docs.google.com\/spreadsheets(.*?)\/d\//; // fixing issue of URLs with u/0/d

		if (url.match(key_pat)) {
			parts.key = url.match(key_pat)[1];
			// can we get a worksheet from this form?
		} else if (url.match(url_pat)) {
			var pos = url.search(url_pat) + url.match(url_pat)[0].length;
			var tail = url.substr(pos);
			parts.key = tail.split('/')[0]
			if (url.match(/\?gid=(\d+)/)) {
				parts.worksheet = url.match(/\?gid=(\d+)/)[1];
			}
		} else if (url.match(/^\b[-_A-Za-z0-9]+$/)) {
			parts.key = url;
		}

		if (parts.key) {
			return parts;
		} else {
			return null;
		}
	}

	function generateSrcUrl() {
		const spreadsheetInputEl = document.getElementById('spreadsheet-input');
		const source = spreadsheetInputEl.value ? parseGoogleSpreadsheetURL(spreadsheetInputEl.value).key : '1fWdaOBE62qfr3OWZGsPqbF4X-bh_VQJ5U3fbbZbd61U';
		const options = {
			source
		};
		const queryParamsString = buildQueryParamsString(options);
		return `http://scene.knightlab.com/scene.html?${queryParamsString}`;
	}
</script>
